// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package config

import (
	"github.com/google/wire"
	"go-clean-architecture/pkg/controllers"
	"go-clean-architecture/pkg/repository/user"
	"go-clean-architecture/pkg/uow"
	user2 "go-clean-architecture/pkg/usecase/user"
)

import (
	_ "github.com/lib/pq"
)

// Injectors from injector.go:

func InitInjector() *controllers.UserController {
	viper := ViperConfig()
	db := GetDB(viper)
	userRepositoryImpl := user.NewUserRepository(db)
	unitOfWorkImpl := uow.NewUowImpl(db)
	userServiceImpl := user2.NewUserService(userRepositoryImpl, unitOfWorkImpl)
	userController := controllers.NewUserController(userServiceImpl)
	return userController
}

// injector.go:

var group = wire.NewSet(
	ViperConfig,
	GetDB, wire.Bind(new(user.IUserRepository), new(*user.UserRepositoryImpl)), uow.NewUowImpl, wire.Bind(new(uow.UnitOfWork), new(*uow.UnitOfWorkImpl)), user.NewUserRepository, wire.Bind(new(user2.IUserService), new(*user2.UserServiceImpl)), user2.NewUserService, controllers.NewUserController,
)
